name: Postgres Workflow

on:
  push:
    branches:
      - main

jobs:
  postgres-setup:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: admin
          POSTGRES_DB: test
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    
    env:
      POSTGRES_PORT: 5432
      POSTGRES_PASSWORD: admin
      POSTGRES_USER: postgres

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Find Docker container IP
        id: docker
        run: |
          docker ps -q | xargs -n 1 docker inspect --format '{{ .Name }} {{range .NetworkSettings.Networks}} {{.IPAddress}}{{end}}' | grep postgres | awk '{print \$2}'
          # docker ps -q | xargs -n 1 docker inspect --format '{{ .Name }} {{range .NetworkSettings.Networks}} {{.IPAddress}}{{end}}' | sed 's#^/##';
          # ip=$(docker ps -q | xargs -n 1 docker inspect --format '{{ .Name }} {{range .NetworkSettings.Networks}} {{.IPAddress}}{{end}}' | grep postgres | cut -d ' ' -f2)
          # echo "ip=$ip" >> $GITHUB_ENV

      # - name: Print Docker container IP
      #   run: echo "The IP address of the PostgreSQL service is ${{ env.ip }}"

      # - name: Install PostgreSQL client
      #   run: |
      #     sudo apt-get update
      #     sudo apt-get install -y postgresql-client
      
      # - name: Connect to PostgreSQL and create a database
      #   run: |
      #     psql -h ${{ steps.docker.outputs.ip }} -p ${{ env.POSTGRES_PORT }} -U ${{ env.POSTGRES_USER }} -c "CREATE DATABASE luxor_index;"


